#
# Vivado (TM) v2014.4 (64-bit)
#
# nexys4.tcl: Tcl script for re-creating project 'nexys_4'
#
# Generated by Vivado on Thu May 21 21:36:05 +1000 2015
# IP Build 1070531 on Tue Nov 18 01:10:18 MST 2014
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (nexys4.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    <none>
#
# 3. The following remote source files that were added to the original project:-
#
#    "C:/Users/Tianhe/Desktop/results_files/repo_src/sources_1/ro_test.vhd"
#    "C:/Users/Tianhe/Desktop/results_files/repo_src/sources_1/ascii_decode.vhd"
#    "C:/Users/Tianhe/Desktop/results_files/repo_src/sources_1/control_test.vhd"
#    "C:/Users/Tianhe/Desktop/results_files/repo_src/sources_1/counter.vhd"
#    "C:/Users/Tianhe/Desktop/results_files/repo_src/sources_1/bram_sp.vhd"
#    "C:/Users/Tianhe/Desktop/results_files/repo_src/sources_1/uart_rx.vhd"
#    "C:/Users/Tianhe/Desktop/results_files/repo_src/sources_1/uart_tx.vhd"
#    "C:/Users/Tianhe/Desktop/results_files/repo_src/9626_constrain_and_source_files/main9626.vhd"
#    "C:/Users/Tianhe/Desktop/results_files/repo_src/sources_1/cmcs_ro.vhd"
#    "C:/Users/Tianhe/Desktop/results_files/repo_src/sources_1/main.vhd"
#    "C:/Users/Tianhe/Desktop/results_files/repo_src/constrs_1/cmcs_r1.xdc"
#    "C:/Users/Tianhe/Desktop/results_files/repo_src/constrs_1/lock_pin.xdc"
#    "C:/Users/Tianhe/Desktop/results_files/repo_src/constrs_1/route.xdc"
#    "C:/Users/Tianhe/Desktop/results_files/repo_src/constrs_1/route_with_the_other_slice.xdc"
#    "C:/Users/Tianhe/Desktop/results_files/repo_src/9626_constrain_and_source_files/route_9626.xdc"
#    "C:/Users/Tianhe/Desktop/results_files/repo_src/9626_constrain_and_source_files/route_with_the_other_slice9626.xdc"
#
#*****************************************************************************************

# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/nexys_4"]"

# Create project
create_project nexys_4 ./nexys_4

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [get_projects nexys_4]
set_property "default_lib" "xil_defaultlib" $obj
set_property "part" "xc7a100tcsg324-1" $obj
set_property "simulator_language" "Mixed" $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "$origin_dir/repo_src/sources_1/ro_test.vhd"]"\
 "[file normalize "$origin_dir/repo_src/sources_1/ascii_decode.vhd"]"\
 "[file normalize "$origin_dir/repo_src/sources_1/control_test.vhd"]"\
 "[file normalize "$origin_dir/repo_src/sources_1/counter.vhd"]"\
 "[file normalize "$origin_dir/repo_src/sources_1/bram_sp.vhd"]"\
 "[file normalize "$origin_dir/repo_src/sources_1/uart_rx.vhd"]"\
 "[file normalize "$origin_dir/repo_src/sources_1/uart_tx.vhd"]"\
 "[file normalize "$origin_dir/repo_src/9626_constrain_and_source_files/main9626.vhd"]"\
 "[file normalize "$origin_dir/repo_src/sources_1/cmcs_ro.vhd"]"\
 "[file normalize "$origin_dir/repo_src/sources_1/main.vhd"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
set file "$origin_dir/repo_src/sources_1/ro_test.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/repo_src/sources_1/ascii_decode.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/repo_src/sources_1/control_test.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/repo_src/sources_1/counter.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/repo_src/sources_1/bram_sp.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/repo_src/sources_1/uart_rx.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/repo_src/sources_1/uart_tx.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/repo_src/9626_constrain_and_source_files/main9626.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/repo_src/sources_1/cmcs_ro.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/repo_src/sources_1/main.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj
set_property "is_enabled" "0" $file_obj


# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property "top" "cmcs_ro" $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/repo_src/constrs_1/cmcs_r1.xdc"]"
set file_added [add_files -norecurse -fileset $obj $file]
set file "$origin_dir/repo_src/constrs_1/cmcs_r1.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property "file_type" "XDC" $file_obj
set_property "used_in_synthesis" "0" $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/repo_src/constrs_1/lock_pin.xdc"]"
set file_added [add_files -norecurse -fileset $obj $file]
set file "$origin_dir/repo_src/constrs_1/lock_pin.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property "file_type" "XDC" $file_obj
set_property "scoped_to_ref" "ring_osc" $file_obj
set_property "used_in_synthesis" "0" $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/repo_src/constrs_1/route.xdc"]"
set file_added [add_files -norecurse -fileset $obj $file]
set file "$origin_dir/repo_src/constrs_1/route.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property "file_type" "XDC" $file_obj
set_property "is_enabled" "0" $file_obj
set_property "scoped_to_ref" "ro_array" $file_obj
set_property "used_in_synthesis" "0" $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/repo_src/constrs_1/route_with_the_other_slice.xdc"]"
set file_added [add_files -norecurse -fileset $obj $file]
set file "$origin_dir/repo_src/constrs_1/route_with_the_other_slice.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property "file_type" "XDC" $file_obj
set_property "is_enabled" "0" $file_obj
set_property "scoped_to_ref" "ro_array" $file_obj
set_property "used_in_synthesis" "0" $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/repo_src/9626_constrain_and_source_files/route_9626.xdc"]"
set file_added [add_files -norecurse -fileset $obj $file]
set file "$origin_dir/repo_src/9626_constrain_and_source_files/route_9626.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property "file_type" "XDC" $file_obj
set_property "scoped_to_ref" "ro_array" $file_obj
set_property "used_in_synthesis" "0" $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/repo_src/9626_constrain_and_source_files/route_with_the_other_slice9626.xdc"]"
set file_added [add_files -norecurse -fileset $obj $file]
set file "$origin_dir/repo_src/9626_constrain_and_source_files/route_with_the_other_slice9626.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property "file_type" "XDC" $file_obj
set_property "is_enabled" "0" $file_obj
set_property "scoped_to_ref" "ro_array" $file_obj
set_property "used_in_synthesis" "0" $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Empty (no sources present)

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property "top" "cmcs_ro" $obj

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
  create_run -name synth_1 -part xc7a100tcsg324-1 -flow {Vivado Synthesis 2014} -strategy "Vivado Synthesis Defaults" -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2014" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property "part" "xc7a100tcsg324-1" $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
  create_run -name impl_1 -part xc7a100tcsg324-1 -flow {Vivado Implementation 2014} -strategy "Vivado Implementation Defaults" -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2014" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property "part" "xc7a100tcsg324-1" $obj
set_property "steps.write_bitstream.tcl.pre" "[file normalize "$origin_dir/loop_warn.tcl"]" $obj

# set the current impl run
current_run -implementation [get_runs impl_1]

puts "INFO: Project created:nexys_4"
